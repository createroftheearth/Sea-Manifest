@model BAL.Models.MessageImplementationModel
@{
    var reportingEvents = SeaManifest.EnumHelper.SelectListFor<BAL.Utilities.EnumConstant.ReportingEvent>();
    var MessageTypesJson = SeaManifest.EnumHelper.SelectListFor<BAL.Utilities.EnumConstant.MessageTypes>();
    var vesselTypeMovements = SeaManifest.EnumHelper.SelectListFor<BAL.Utilities.EnumConstant.VesselTypeMovement>();
    var submitterType = SeaManifest.EnumHelper.SelectListFor<BAL.Utilities.EnumConstant.SubmitterType>();
    var modeOfTransport = SeaManifest.EnumHelper.SelectListForByte<BAL.Utilities.EnumConstant.ModeOfTransport>();
    var typeOfTransportMeans = SeaManifest.EnumHelper.SelectListForByte<BAL.Utilities.EnumConstant.TypeOfTransportMeans>();
    var shipTypes = BAL.Services.MasterConsignmentService.Instance.GetCodesByType("SHIP_TYP");
    var purpOfCalls = BAL.Services.MasterConsignmentService.Instance.GetCodesByType("PURP_CALL");
    var cargoDescCodes = BAL.Services.MasterConsignmentService.Instance.GetCodesByType("CAR_DESC");
}
@using (Html.BeginForm("AddUpdateMessage", "MessageImplementation", FormMethod.Post, new { @id = "frmMessage" }))
{
    <div class="modal-header">
        <h4 class="modal-title">Add/Update Message</h4>
        <button type="button" class="close" data-dismiss="modal">&times;</button>
    </div>

    <div class="modal-body">
        @Html.HiddenFor(z => z.iMessageImplementationId)
        <div class="panel panel-primary">
            <div class="panel-heading">
                Header
            </div>
            <div class="panel-body">
                <div class="row">
                    <div class="form-group col-md-4">
                        @Html.Label("Sender Id")
                        @Html.TextBoxFor(z => z.sSenderID, new { @class = "form-control" })
                        @Html.ValidationMessageFor(z => z.sSenderID)
                    </div>
                    <div class="form-group col-md-4">
                        @Html.Label("Receiver Id")
                        @Html.TextBoxFor(z => z.sReceiverID, new { @class = "form-control" })
                        @Html.ValidationMessageFor(z => z.sReceiverID)
                    </div>
                    <div class="form-group col-md-4">
                        @Html.Label("Message Id")
                        @Html.TextBoxFor(z => z.sMessageID, new { @class = "form-control" })
                        @Html.ValidationMessageFor(z => z.sMessageID)
                    </div>
                    <div class="form-group col-md-4">
                        @Html.Label("Sequence Or Control Number")
                        @Html.TextBoxFor(z => z.dSequenceOrControlNumber, new { @class = "form-control" })
                        @Html.ValidationMessageFor(z => z.dSequenceOrControlNumber)
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(z => z.sDateTime)
                        <div class="input-group" id="headerFieldDatePicker" data-target-input="nearest">
                            @Html.TextBoxFor(z => z.sDateTime, new { @class = "form-control datetimepicker-input", @data_target = "#headerFieldDatePicker" })
                            <div class="input-group-append" data-target="#headerFieldDatePicker" data-toggle="datetimepicker">
                                <span class="input-group-addon">
                                    <i class="fa fa-calendar"></i>
                                </span>
                            </div>
                        </div>
                        @Html.ValidationMessageFor(z => z.sDateTime)
                    </div>
                </div>
            </div>
        </div>
        <div class="panel panel-primary">
            <div class="panel-heading">
                Declaration Reference
            </div>
            <div class="panel-body">
                <div class="row">
                    <div class="form-group col-md-4">
                        @Html.LabelFor(z => z.sDecRefMsgType)
                        @Html.DropDownListFor(z => z.sDecRefMsgType, MessageTypesJson, new { @class = "form-control", @data_live_search = "true" })
                        @Html.ValidationMessageFor(z => z.sDecRefMsgType)
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(z => z.sDecRefPortOfReporting)
                        @Html.TextBoxFor(z => z.sDecRefPortOfReporting, new { @class = "form-control" })
                        @Html.ValidationMessageFor(z => z.sDecRefPortOfReporting)
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(z => z.dDecRefjobNo)
                        @Html.TextBoxFor(z => z.dDecRefjobNo, new { @class = "form-control" })
                        @Html.ValidationMessageFor(z => z.dDecRefjobNo)
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(z => z.sDecRefJobDt)
                        <div class="input-group" id="psDecRefJobDt" data-target-input="nearest">
                            @Html.TextBoxFor(z => z.sDecRefJobDt, new { @class = "form-control datetimepicker-input", @data_target = "#psDecRefJobDt" })
                            <div class="input-group-append" data-target="#psDecRefJobDt" data-toggle="datetimepicker">
                                <span class="input-group-addon">
                                    <i class="fa fa-calendar"></i>
                                </span>
                            </div>
                        </div>
                        @Html.ValidationMessageFor(z => z.sDecRefJobDt)
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(z => z.sDecRefReportingEvent)
                        @Html.DropDownListFor(z => z.sDecRefReportingEvent, reportingEvents, "Select", new { @class = "form-control" })
                        @Html.ValidationMessageFor(z => z.sDecRefReportingEvent)
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(z => z.dDecRefManifestNoRotnNo)
                        @Html.TextBoxFor(z => z.dDecRefManifestNoRotnNo, new { @class = "form-control" })
                        @Html.ValidationMessageFor(z => z.dDecRefManifestNoRotnNo)
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(z => z.sDecRefManifestDateRotnDt)
                        <div class="input-group" id="psDecRefManifestDateRotnDt" data-target-input="nearest">
                            @Html.TextBoxFor(z => z.sDecRefManifestDateRotnDt, new { @class = "form-control datetimepicker-input", @data_target = "#psDecRefManifestDateRotnDt" })
                            <div class="input-group-append" data-target="#psDecRefManifestDateRotnDt" data-toggle="datetimepicker">
                                <span class="input-group-addon">
                                    <i class="fa fa-calendar"></i>
                                </span>
                            </div>
                        </div>
                        @Html.ValidationMessageFor(z => z.sDecRefManifestDateRotnDt)
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(z => z.sDecRefVesselTypeMovement)
                        @Html.DropDownListFor(z => z.sDecRefVesselTypeMovement, vesselTypeMovements, "Select", new { @class = "form-control", @data_live_search = "true" })
                        @Html.ValidationMessageFor(z => z.sDecRefVesselTypeMovement)
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(z => z.dDecRefDptrPreviousManifestNo)
                        @Html.TextBoxFor(z => z.dDecRefDptrPreviousManifestNo, new { @class = "form-control" })
                        @Html.ValidationMessageFor(z => z.dDecRefDptrPreviousManifestNo)
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(z => z.sDecRefPreviousManifestDptrDate)
                        <div class="input-group" id="psDecRefPreviousManifestDptrDate" data-target-input="nearest">
                            @Html.TextBoxFor(z => z.sDecRefPreviousManifestDptrDate, new { @class = "form-control datetimepicker-input", @data_target = "#psDecRefPreviousManifestDptrDate" })
                            <div class="input-group-append" data-target="#psDecRefPreviousManifestDptrDate" data-toggle="datetimepicker">
                                <span class="input-group-addon">
                                    <i class="fa fa-calendar"></i>
                                </span>
                            </div>
                        </div>
                        @Html.ValidationMessageFor(z => z.sDecRefPreviousManifestDptrDate)
                    </div>
                </div>
            </div>
        </div>
        <div class="panel panel-primary">
            <div class="panel-heading">
                Authorized Person
            </div>
            <div class="panel-body">
                <div class="row">
                    <div class="form-group col-md-4">
                        @Html.LabelFor(z => z.sAuthPrsnSubmitType)
                        @Html.DropDownListFor(z => z.sAuthPrsnSubmitType, submitterType, "Select", new { @class = "form-control", @data_live_search = "true" })
                        @Html.ValidationMessageFor(z => z.sAuthPrsnSubmitType)
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(z => z.sAuthPrsnSubmitCode)
                        @Html.TextBoxFor(z => z.sAuthPrsnSubmitCode, new { @class = "form-control" })
                        @Html.ValidationMessageFor(z => z.sAuthPrsnSubmitCode)
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(z => z.sAuthPrsnAuthRepresentativePAN)
                        @Html.TextBoxFor(z => z.sAuthPrsnAuthRepresentativePAN, new { @class = "form-control" })
                        @Html.ValidationMessageFor(z => z.sAuthPrsnAuthRepresentativePAN)
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(z => z.sAuthPrsnShipLineCode)
                        @Html.TextBoxFor(z => z.sAuthPrsnShipLineCode, new { @class = "form-control" })
                        @Html.ValidationMessageFor(z => z.sAuthPrsnShipLineCode)
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(z => z.sAuthPrsnAuthSeaCarrierCode)
                        @Html.TextBoxFor(z => z.sAuthPrsnAuthSeaCarrierCode, new { @class = "form-control" })
                        @Html.ValidationMessageFor(z => z.sAuthPrsnAuthSeaCarrierCode)
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(z => z.sAuthPrsnMasterName)
                        @Html.TextBoxFor(z => z.sAuthPrsnMasterName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(z => z.sAuthPrsnMasterName)
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(z => z.sAuthPrsnShippingLineBondNo)
                        @Html.TextBoxFor(z => z.sAuthPrsnShippingLineBondNo, new { @class = "form-control" })
                        @Html.ValidationMessageFor(z => z.sAuthPrsnShippingLineBondNo)
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(z => z.sAuthPrsnTerminalCustodianCode)
                        @Html.TextBoxFor(z => z.sAuthPrsnTerminalCustodianCode, new { @class = "form-control" })
                        @Html.ValidationMessageFor(z => z.sAuthPrsnTerminalCustodianCode)
                    </div>
                </div>
            </div>
        </div>
        <div class="panel panel-primary vesselDetails">
            <div class="panel-heading">
                Vessel Details
            </div>
            <div class="panel-body">
                <div class="row">
                    <div class="form-group col-md-4">
                        @Html.LabelFor(z => z.sVesselDtlsModeOfTransport)
                        @Html.DropDownListFor(z => z.sVesselDtlsModeOfTransport, modeOfTransport, "Select", new { @class = "form-control", @data_live_search = "true" })
                        @Html.ValidationMessageFor(z => z.sVesselDtlsModeOfTransport)
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(z => z.sVesselDtlsTypeOfTransportMeans)
                        @Html.DropDownListFor(z => z.sVesselDtlsTypeOfTransportMeans, typeOfTransportMeans, "Select", new { @class = "form-control", @data_live_search = "true" })
                        @Html.ValidationMessageFor(z => z.sVesselDtlsTypeOfTransportMeans)
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(z => z.sVesselDtlsTransportMeansId)
                        @Html.TextBoxFor(z => z.sVesselDtlsTransportMeansId, new { @class = "form-control" })
                        @Html.ValidationMessageFor(z => z.sVesselDtlsTransportMeansId)
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(z => z.sVesselDtlsVesselCode)
                        @Html.TextBoxFor(z => z.sVesselDtlsVesselCode, new { @class = "form-control" })
                        @Html.ValidationMessageFor(z => z.sVesselDtlsVesselCode)
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(z => z.sVesselDtlsShipType)
                        @Html.DropDownListFor(z => z.sVesselDtlsShipType, shipTypes, "Select", new { @class = "form-control", @data_live_search = "true" })
                        @Html.ValidationMessageFor(z => z.sVesselDtlsShipType)
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(z => z.sVesselDtlsPurposeOfCall)
                        @Html.DropDownListFor(z => z.sVesselDtlsPurposeOfCall, purpOfCalls, "Select", new { @class = "form-control", @data_live_search = "true" })
                        @Html.ValidationMessageFor(z => z.sVesselDtlsPurposeOfCall)
                    </div>
                </div>
            </div>
        </div>
        <div class="panel panel-primary voyageDetails">
            <div class="panel-heading">
                Voyage Details
            </div>
            <div class="panel-body">
                <div class="row">
                    <div class="form-group col-md-4">
                        @Html.LabelFor(z => z.sVoyageDtlsVoyageNo)
                        @Html.TextBoxFor(z => z.sVoyageDtlsVoyageNo, new { @class = "form-control" })
                        @Html.ValidationMessageFor(z => z.sVoyageDtlsVoyageNo)
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(z => z.sVoyageDtlsConveinceRefNo)
                        @Html.TextBoxFor(z => z.sVoyageDtlsConveinceRefNo, new { @class = "form-control" })
                        @Html.ValidationMessageFor(z => z.sVoyageDtlsConveinceRefNo)
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(z => z.sVoyageDtlsTotalNumberofTrnsptEqtMnfstd)
                        @Html.TextBoxFor(z => z.sVoyageDtlsTotalNumberofTrnsptEqtMnfstd, new { @class = "form-control" })
                        @Html.ValidationMessageFor(z => z.sVoyageDtlsTotalNumberofTrnsptEqtMnfstd)
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(z => z.sVoyageDtlsCargoDesCdd)
                        @Html.TextBoxFor(z => z.sVoyageDtlsCargoDesCdd, new { @class = "form-control" })
                        @Html.ValidationMessageFor(z => z.sVoyageDtlsCargoDesCdd)
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(z => z.sVoyageDtlsBriefCargoDesc)
                        @Html.DropDownListFor(z => z.sVoyageDtlsBriefCargoDesc, cargoDescCodes, "Select", new { @class = "form-control", @data_live_search = "true" })
                        @Html.ValidationMessageFor(z => z.sVoyageDtlsBriefCargoDesc)
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(z => z.dVoyageDtlsTotalNumberOfLines)
                        @Html.TextBoxFor(z => z.dVoyageDtlsTotalNumberOfLines, new { @class = "form-control" })
                        @Html.ValidationMessageFor(z => z.dVoyageDtlsTotalNumberOfLines)
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(z => z.sVoyageDtlsExpectedDtandTimeOfArrival)
                        <div class="input-group" id="psVoyageDtlsExpectedDtandTimeOfArrival" data-target-input="nearest">
                            @Html.TextBoxFor(z => z.sVoyageDtlsExpectedDtandTimeOfArrival, new { @class = "form-control datetimepicker-input", @data_target = "#psVoyageDtlsExpectedDtandTimeOfArrival" })
                            <div class="input-group-append" data-target="#psVoyageDtlsExpectedDtandTimeOfArrival" data-toggle="datetimepicker">
                                <span class="input-group-addon">
                                    <i class="fa fa-calendar"></i>
                                </span>
                            </div>
                        </div>
                        @Html.ValidationMessageFor(z => z.sVoyageDtlsExpectedDtandTimeOfArrival)
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(z => z.sVoyageDtlsExpectedDtandTimeOfDeparture)
                        <div class="input-group" id="psVoyageDtlsExpectedDtandTimeOfDeparture" data-target-input="nearest">
                            @Html.TextBoxFor(z => z.sVoyageDtlsExpectedDtandTimeOfDeparture, new { @class = "form-control datetimepicker-input", @data_target = "#psVoyageDtlsExpectedDtandTimeOfDeparture" })
                            <div class="input-group-append" data-target="#psVoyageDtlsExpectedDtandTimeOfDeparture" data-toggle="datetimepicker">
                                <span class="input-group-addon">
                                    <i class="fa fa-calendar"></i>
                                </span>
                            </div>
                        </div>
                        @Html.ValidationMessageFor(z => z.sVoyageDtlsExpectedDtandTimeOfDeparture)
                    </div>
                </div>
            </div>
        </div>
        <div class="panel panel-primary ArrDptrDetails">
            <div class="panel-heading">
                Arrival/Departure Details
            </div>
            <div class="panel-body">
                <div class="row">
                    <div class="form-group col-md-4">
                        @Html.LabelFor(z => z.iArvlDtlsNumberOfPassengers)
                        @Html.TextBoxFor(z => z.iArvlDtlsNumberOfPassengers, new { @class = "form-control" })
                        @Html.ValidationMessageFor(z => z.iArvlDtlsNumberOfPassengers)
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(z => z.iArvlDtlsNumberOfCrew)
                        @Html.TextBoxFor(z => z.iArvlDtlsNumberOfCrew, new { @class = "form-control" })
                        @Html.ValidationMessageFor(z => z.iArvlDtlsNumberOfCrew)
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(z => z.iArvlDtlsLightHouseDues)
                        @Html.TextBoxFor(z => z.iArvlDtlsLightHouseDues, new { @class = "form-control" })
                        @Html.ValidationMessageFor(z => z.iArvlDtlsLightHouseDues)
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(z => z.iArvlDtlsTotalNoOfCntrsLanded)
                        @Html.TextBoxFor(z => z.iArvlDtlsTotalNoOfCntrsLanded, new { @class = "form-control" })
                        @Html.ValidationMessageFor(z => z.iArvlDtlsTotalNoOfCntrsLanded)
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(z => z.iArvlDtlsTotalOfCntrsLoaded)
                        @Html.TextBoxFor(z => z.iArvlDtlsTotalOfCntrsLoaded, new { @class = "form-control" })
                        @Html.ValidationMessageFor(z => z.iArvlDtlsTotalOfCntrsLoaded)
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(z => z.iArvlDtlsTotalNoOfPersonOnBoard)
                        @Html.TextBoxFor(z => z.iArvlDtlsTotalNoOfPersonOnBoard, new { @class = "form-control" })
                        @Html.ValidationMessageFor(z => z.iArvlDtlsTotalNoOfPersonOnBoard)
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(z => z.iArvlDtlsTotalNoOfTrnsprtEqReprtdOnArrDptr)
                        @Html.TextBoxFor(z => z.iArvlDtlsTotalNoOfTrnsprtEqReprtdOnArrDptr, new { @class = "form-control" })
                        @Html.ValidationMessageFor(z => z.iArvlDtlsTotalNoOfTrnsprtEqReprtdOnArrDptr)
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(z => z.iArvlDtlsTotalNoOfTrnsprtCntrctReprtdOnArrDptr)
                        @Html.TextBoxFor(z => z.iArvlDtlsTotalNoOfTrnsprtCntrctReprtdOnArrDptr, new { @class = "form-control" })
                        @Html.ValidationMessageFor(z => z.iArvlDtlsTotalNoOfTrnsprtCntrctReprtdOnArrDptr)
                    </div>
                </div>
            </div>
        </div>
        <div class="panel panel-primary">
            <div class="panel-heading">
                Digi Sign
            </div>
            <div class="panel-body">
                <div class="row">
                    <div class="form-group col-md-4">
                        @Html.LabelFor(z => z.sDigiSignStartSignature)
                        @Html.TextBoxFor(z => z.sDigiSignStartSignature, new { @class = "form-control" })
                        @Html.ValidationMessageFor(z => z.sDigiSignStartSignature)
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(z => z.sDigiSignStartCertificate)
                        @Html.TextBoxFor(z => z.sDigiSignStartCertificate, new { @class = "form-control" })
                        @Html.ValidationMessageFor(z => z.sDigiSignStartCertificate)
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(z => z.sDigiSignSignerVersion)
                        @Html.TextBoxFor(z => z.sDigiSignSignerVersion, new { @class = "form-control" })
                        @Html.ValidationMessageFor(z => z.sDigiSignSignerVersion)
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="modal-footer">
        <button type="submit" class="btn btn-success">Submit</button>
        <button type="button" class="btn btn-danger" data-dismiss="modal">Cancel</button>
    </div>
}
